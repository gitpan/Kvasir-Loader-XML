.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Kvasir::Loader::XML 3"
.TH Kvasir::Loader::XML 3 "2007-10-08" "perl v5.8.6" "User Contributed Perl Documentation"
.SH "NAME"
Kvasir::Loader::XML \- Load Kvasir engine declarations in XML
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&  use Kvasir::Loader::XML;
.Ve
.PP
.Vb 2
\&  my $engine = Kvasir::Loader::XML->load_file("my_engine.xml");
\&  $engine->run();
.Ve
.PP
.Vb 2
\&  my $other_engine = Kvasir::Loader::XML->load_string($xml);
\&  $other_engine->run();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module provides a mean to load Kvasir engine declarations from \s-1XML\s0.
.SH "INTERFACE"
.IX Header "INTERFACE"
.Sh "\s-1CLASS\s0 \s-1METHODS\s0"
.IX Subsection "CLASS METHODS"
.IP "load_file ( \s-1PATH\s0 )" 4
.IX Item "load_file ( PATH )"
Loads the engine declaration from \fI\s-1PATH\s0\fR.
.IP "load_string ( \s-1XML\s0 )" 4
.IX Item "load_string ( XML )"
Loads the engine declaration from \fI\s-1XML\s0\fR.
.SH "XML Document structure"
.IX Header "XML Document structure"
The document root element must be \fB<engine>\fR. Valid children are:
.IP "\(bu" 4
\&\fB<action>\fR \- Declares an action.
.IP "\(bu" 4
\&\fB<defaults>\fR \- Defines a default argument set
.IP "\(bu" 4
\&\fB<input>\fR \- Declares an input.
.IP "\(bu" 4
\&\fB<output>\fR \- Declares an output.
.IP "\(bu" 4
\&\fB<rule>\fR \- Declares a rule.
.IP "\(bu" 4
\&\fB<ruleset>\fR \- Groups a set of rules under a common name.
.IP "\(bu" 4
\&\fB<run>\fR \- Connects a set of rules to an action.
.Sh "Action, Input, Output and Rule elements"
.IX Subsection "Action, Input, Output and Rule elements"
The elements \fB<action>\fR, \fB<input>\fR, \fB<output>\fR and \fB<rule>\fR all have 
the following mandatory attributes:
.IP "name" 4
.IX Item "name"
The name of the entity to define in the engine.
.IP "instanceOf" 4
.IX Item "instanceOf"
The class that implements the entity and that'll be instansiated when the engine is runned.
.IP "defaults" 4
.IX Item "defaults"
The default arguments to the entity as defined by a previously declared \fB<defaults>\fR. 
Separate multiple defaults with comma and/or whitespace.
.PP
If the class defined by \fIinstanceOf\fR implements the method \f(CW\*(C`process_xml_loader_args\*(C'\fR it will be 
called as a class method with the \f(CW\*(C`XML::LibXML::Element\*(C'\fR\-element as only argument. This method 
must return a list of arguments that will be passed to the constructor for the class when 
the entity is instansiated.
.PP
If no \f(CW\*(C`process_xml_loader_args\*(C'\fR method is available the loader will interpret all children as a hash
where the elements name is the key and its text content its value. If a child is an empty element, 
that is has no children (as in \f(CW\*(C`<foo/>\*(C'\fR) its value will be undef. This hash will be passed 
to the constructor as a hash reference.
.Sh "Defaults"
.IX Subsection "Defaults"
By using the tag \fB<defaults>\fR t is possible to declare common arguments that can be 
reused by multiple entities. Its children will be interpreted as key/value pairs. The required 
attribute 'name' defines the name for the defaults.
.Sh "Rulesets"
.IX Subsection "Rulesets"
By using the tag \fB<ruleset>\fR it is possible to give a set of rules a shared name that can later be 
used when binding together rules and actions. 
.PP
The attribute \fIname\fR is always expected and is used to give the ruleset its name which can be referenced 
later on by other rulesets or rule<\->action mappings.
.PP
To specify what rules to include it expects \fB<rule>name of rule</rule\fR and/or \fB<ruleset>name of ruleset</ruleset>\fR elements 
as children. Any other element will result in an error.
.PP
In addition to specifying specific rules or contens of other rulesets it is also possible to 
include the rules that matches the criteria specified by the attributes:
.IP "rulesMatchingName" 4
.IX Item "rulesMatchingName"
Include all rules that matches the name by the given Perl5 regular expression.
.IP "rulesOfClass" 4
.IX Item "rulesOfClass"
Include all rules which inherits from the given class.
.PP
Note, if both attributes above are present it does not create a ruleset with the rule that 
matches both (i.e a union).
.Sh "Connecting rules and actions"
.IX Subsection "Connecting rules and actions"
To connect an action to a rule use the \fB<run>\fR element. It expects the attribute 
\&\fIaction\fR which must be the name of an already defined action. Which rules to invoke the 
action on is specified with children of type \fB<rule>name of rule</rule\fR and/or 
\&\fB<ruleset>name of ruleset</ruleset>\fR. Any other element will result in an error.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Kvasir
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
Please report any bugs or feature requests to \f(CW\*(C`bug\-kvasir\-loader\-xml@rt.cpan.org\*(C'\fR, 
or through the web interface at <http://rt.cpan.org>.
.SH "AUTHOR"
.IX Header "AUTHOR"
Claes Jakobsson \f(CW\*(C`<claesjac@cpan.org>\*(C'\fR
.SH "LICENCE AND COPYRIGHT"
.IX Header "LICENCE AND COPYRIGHT"
Copyright (c) 2007, Versed Solutions \f(CW\*(C`<info@versed.se>\*(C'\fR. All rights reserved.
.PP
This software is released under the \s-1MIT\s0 license cited below.
.ie n .Sh "The ""\s-1MIT\s0"" License"
.el .Sh "The ``\s-1MIT\s0'' License"
.IX Subsection "The MIT License"
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the \*(L"Software\*(R"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in
all copies or substantial portions of the Software.
.PP
\&\s-1THE\s0 \s-1SOFTWARE\s0 \s-1IS\s0 \s-1PROVIDED\s0 \*(L"\s-1AS\s0 \s-1IS\s0\*(R", \s-1WITHOUT\s0 \s-1WARRANTY\s0 \s-1OF\s0 \s-1ANY\s0 \s-1KIND\s0, \s-1EXPRESS\s0
\&\s-1OR\s0 \s-1IMPLIED\s0, \s-1INCLUDING\s0 \s-1BUT\s0 \s-1NOT\s0 \s-1LIMITED\s0 \s-1TO\s0 \s-1THE\s0 \s-1WARRANTIES\s0 \s-1OF\s0 \s-1MERCHANTABILITY\s0,
\&\s-1FITNESS\s0 \s-1FOR\s0 A \s-1PARTICULAR\s0 \s-1PURPOSE\s0 \s-1AND\s0 \s-1NONINFRINGEMENT\s0. \s-1IN\s0 \s-1NO\s0 \s-1EVENT\s0 \s-1SHALL\s0
\&\s-1THE\s0 \s-1AUTHORS\s0 \s-1OR\s0 \s-1COPYRIGHT\s0 \s-1HOLDERS\s0 \s-1BE\s0 \s-1LIABLE\s0 \s-1FOR\s0 \s-1ANY\s0 \s-1CLAIM\s0, \s-1DAMAGES\s0 \s-1OR\s0 \s-1OTHER\s0
\&\s-1LIABILITY\s0, \s-1WHETHER\s0 \s-1IN\s0 \s-1AN\s0 \s-1ACTION\s0 \s-1OF\s0 \s-1CONTRACT\s0, \s-1TORT\s0 \s-1OR\s0 \s-1OTHERWISE\s0, \s-1ARISING\s0
\&\s-1FROM\s0, \s-1OUT\s0 \s-1OF\s0 \s-1OR\s0 \s-1IN\s0 \s-1CONNECTION\s0 \s-1WITH\s0 \s-1THE\s0 \s-1SOFTWARE\s0 \s-1OR\s0 \s-1THE\s0 \s-1USE\s0 \s-1OR\s0 \s-1OTHER\s0
\&\s-1DEALINGS\s0 \s-1IN\s0 \s-1THE\s0 \s-1SOFTWARE\s0.
